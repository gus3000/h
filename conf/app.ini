[pipeline:main]
# Most errors will be handled in exception views within the application. The
# raven middleware is here primarily as a fail-safe, and to capture errors
# thrown by framework code.
pipeline:
  proxy-prefix
  h

[app:h]
use: call:h.app:create_app

# Elasticsearch configuration
es.host: http://elasticsearch:9200
es.index: hypothesis

# SQLAlchemy configuration -- See SQLAlchemy documentation
sqlalchemy.url: postgresql://postgres@postgres/postgres

[filter:proxy-prefix]
use: egg:PasteDeploy#prefix

[filter:raven]
use: egg:raven#raven

[server:main]
use: egg:gunicorn
host: 0.0.0.0
port: 5000

[loggers]
keys = root, alembic, gunicorn.error, h

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_gunicorn.error]
level = INFO
handlers =
qualname = gunicorn.error

[logger_h]
level = INFO
handlers =
qualname = h

[logger_sentry]
level = WARNING
handlers = console
qualname = sentry.errors
propagate = 0

[handler_console]
level = NOTSET
class = StreamHandler
args = ()
formatter = generic

[handler_sentry]
level = WARNING
class = raven.handlers.logging.SentryHandler
args = ()
formatter = generic

[formatter_generic]
format = %(asctime)s [%(process)d] [%(name)s:%(levelname)s] %(message)s
